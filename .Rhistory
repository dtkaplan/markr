?textInput
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
jsonlite::toJSON(head(mtcars))
jsonlite::toJSON(head(mtcars)) -> foo
class(foo)
as.character(foo)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
foo  <- date()
class(foo)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(learnr)
knitr::opts_chunk$set(echo = FALSE)
password_key <- "1h_G3M-HTVfrC8lqHS8aKn_jVFg2_Rnnbtk5erpWX54o"
googlesheets4::sheets_deauth()
passwd_df <-  sheets_read(password_key)
passwd_df <-  googlesheets4::sheets_read(password_key)
passwd_df
help(package="googlesheets4")
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
store_key <- "1D9kzkgUEGRvv2Q7q2n8ca9gcZk1_aglodbGJ3rLCYjI"
sheets_append(data.frame(a=3, b = "hello"),  store_key)
googlesheets4::sheets_append(data.frame(a=3, b = "hello"),  store_key)
googlesheets4::sheets_append(data.frame(a=7, b = "bye"),  store_key)
View(passwd_df)
load("~/KaplanFiles/Learnr/markr/inst/Example1/event.rda")
googlesheets4::sheets_append(event_fields,  store_key)
googlesheets4::sheets_append(data.frame(event_fields),  store_key)
googlesheets4::sheets_append(data.frame(event_fields[1:2]),  store_key)
googlesheets4::sheets_append(data.frame(event_fields[1:4]),  store_key)
googlesheets4::sheets_append(data.frame(event_fields[1:6]),  store_key)
googlesheets4::sheets_append(data.frame(event_fields[1:8]),  store_key)
googlesheets4::sheets_append(data.frame(event_fields[1:7]),  store_key)
event_fields[7]
library(markr)
load("~/KaplanFiles/Learnr/markr/inst/Example1/event.rda")
googlesheets4::sheets_append(data.frame(event_fields[1:7]),  store_key)
library(markr)
library(markr)
library(markr)
token_fetch(scopes = "https://www.googleapis.com/auth/userinfo.email")
library(googlesheets4)
token_fetch(scopes = "https://www.googleapis.com/auth/userinfo.email")
library(gargle)
token_fetch(scopes = "https://www.googleapis.com/auth/userinfo.email")
token_fetch(scopes = "https://www.googleapis.com/auth/userinfo.email") -> my_token
class(my_token)
save(my_token, file = "token.rda")
str(my_token)
store_key <- "1D9kzkgUEGRvv2Q7q2n8ca9gcZk1_aglodbGJ3rLCYjI"
sheets_deauth()
sheets_append(data.frame(t = 7, r = "yes", t = "no"))
sheets_append(data.frame(t = 7, r = "yes", t = "no"),  store_key)
getwd()
sheets_append(data.frame(t = 7, r = "yes", t = "no"),  store_key)
sheets_auth()
sheets_append(data.frame(t = 7, r = "yes", t = "no"),  store_key)
gs_user()
sheets_api_key()
sheets_oauth_app()
sheets_append(data.frame(t = 7, r = "yes", t = "nooooo"),  store_key)
getwd()
?sheets_auth
gargle::gargle_oauth_cache()
library(googlesheets)
help(package = "googlesheets")
my_key <- gs_key(store_key)
gs_read(my_key)
store_key
foo <- gs_auth()
library(googlesheets)
token <- gs_auth(cache = FALSE)
gd_token()
saveRDS(token, file = "googlesheets_token.rds")
token <- gs_token(cache = FALSE)
token <- gs_auth(cache = FALSE)
sheets_auth(cache = TRUE) ->  token
token
class(token)
sheets_auth(cache = "token")
View(my_token)
token <- gs_auth(cache = FALSE)
cred_funs_list()
cred_funs_list()
help(package = "gargle")
getwd()
setwd("inst/Example1/")
dir()
gs_auth(new_user = TRUE)
sheets_auth(
email = "dtkaplan@gmail.com") -> my_token
my_token
dir(all.files=TRUE)
store_key <- "1D9kzkgUEGRvv2Q7q2n8ca9gcZk1_aglodbGJ3rLCYjI"
sheets_append(data.frame(t = 7, r = "yes", t = "no"))
sheets_append(data.frame(t = 7, r = "yes", t = "no"),  store_key)
library(learnr)
library(markr)
library(googlesheets4)
knitr::opts_chunk$set(echo = FALSE)
library(googledrive4)
library(googledrive)
options(
gargle_oauth_cache = "/Users/kaplan/.R/gargle/gargle-oauth",
gargle_oauth_email = "dtkaplan@gmail.com"
)
drive_find(n_max = 5)
drive_auth()
drive_auth(email = "dtkaplan@gmail.com")
?drive_auth
gargle::gargle_oauth_cache
options(
gargle_oauth_cache = "/Users/kaplan/.R/gargle/gargle-oauth",
gargle_oauth_email = "dtkaplan@gmail.com"
)
getOption("gargle_oauth_cache", default = NA)
}
getOption("gargle_oauth_cache", default = NA)
drive_auth(email = "dtkaplan@gmail.com")
drive_find(n_max = 5)
getwd()
ls -la
ls -a
store_key <- "1D9kzkgUEGRvv2Q7q2n8ca9gcZk1_aglodbGJ3rLCYjI"
hoo  <- loadRDS("secret-token.RDS")
hoo  <- readRDS("secret-token.RDS")
sheets_auth(token = hoo)
library(markr)
library(markr)
library(markr)
library(markr)
load("~/KaplanFiles/Learnr/markr/inst/Example1/event.rda")
event_fields
noo <-  as.data.frame(event_fields)
noo
lapply(event_fields,  as.character)
as.data.frame(lapply(event_fields,  as.character))
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
# get the address of the directory ~/R/gargle/gargle-oauth
dir("~/.R/gargle/gargle-oauth")
usethis::use_vignette("access", "Access & Security")
library(markr)
foo <- readRDS("meee")
?exists
getwd()
dir("secret-key.RDS")
library(markr)
library(markr)
??deauth
library(markr)
library(markr)
library(markr)
library(markr)
sheets_auth()
sheets_deauth()
library(markr)
library(markr)
library(markr)
help(package = "googledrive")
googledrive::drive_oauth_app()
googledrive::drive_api_key()
library(markr)
library(markr)
library(markr)
library(markr)
library(markr)
sheets_auth()
# get the address of the directory ~/R/gargle/gargle-oauth
dir("~/.R/gargle/gargle-oauth")
?question
question
?question
?question
library(markr)
library(markr)
sheets_auth()
sheets_deauth()
googlesheets4::sheets_auth()
library(googlesheets4)
sheets_auth()
library(learnr)
library(markr)
library(googlesheets4)
knitr::opts_chunk$set(echo = FALSE)
# get the address of the directory ~/R/gargle/gargle-oauth
dir("~/.R/gargle/gargle-oauth")
getwd()
setwd("inst")
setwd("Markr-demo/")
dir()
hoo <- readRDS("secret-token.RDS")
class(hoo)
ls("secret-token.RDS")
dir("secret-token.RDS")
dir()
?dir
dir(pattern = "secret-token.RDS")
dir(pattern = "secret-to.RDS")
library(markr)
library(markr)
markr:::session_id_init()
markr:::session_id()
markr:::session_id_init()
markr:::session_id()
install.packages(c("directlabels", "mosaic", "pdftools", "rmarkdown", "tinytex"))
install.packages("rsconnect", lib="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
